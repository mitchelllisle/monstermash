{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#monstermash","title":"\ud83e\udddf Monstermash","text":"<p>1\ufe0f\u20e3 version: 1.12.0</p> <p>\u270d\ufe0f author: Mitchell Lisle</p>"},{"location":"#install","title":"Install","text":"<p>Install from PyPi</p> <pre><code>pip install monstermash\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Monstermash can generate keys, encrypt files or text with keys, and decrypt a file or text</p>"},{"location":"#generate-keys","title":"Generate Keys","text":"<pre><code>monstermash generate\n</code></pre> <pre><code>-----------------\nPrivate Key (keep is secret, keep it safe)\na715a3d11d0f9c13de3bd6d390e36ba4e3322f4f2e4f1a13a54ba85be606de87\nPublic Key (you can share this one)\n01765c67f451f3175f53bbe11d69d73a36d45074da935271473b4a1c460e3d79\n-----------------\n</code></pre>"},{"location":"#store-configuration","title":"Store configuration","text":"<p><pre><code>Usage: monstermash configure [OPTIONS]\n\nOptions:\n  --profile TEXT      The name of the profile you want to create.\n  --private-key TEXT  Your private key.\n  --public-key TEXT   Your public key.\n  --help              Show this message and exit.\n</code></pre> <pre><code>monstermash configure \\\n  --profile default \\\n  --private-key a715a3d11d0f9c13de3bd6d390e36ba4e3322f4f2e4f1a13a54ba85be606de87 \\\n  --public-key 01765c67f451f3175f53bbe11d69d73a36d45074da935271473b4a1c460e3d79\n</code></pre></p>"},{"location":"#encrypt-text-or-file","title":"Encrypt text or file","text":"<pre><code>Usage: monstermash encrypt [OPTIONS]\n\nOptions:\n  --profile TEXT\n  --private-key TEXT  Your private key.\n  --public-key TEXT   Your public key.\n  --file TEXT         The path to the file you want to encrypt\n  --data TEXT         Input data you want to encrypt\n  --help              Show this message and exit.\n</code></pre> <pre><code>monstermash encrypt \\\n  --profile default \\\n  --public-key 03ab4b8a77456729678a8022c2bfe22f64ed2db72692903e5f69e4a92649e646 \\\n  --data \"hello world\"\n</code></pre>"},{"location":"#decryption-text","title":"Decryption text","text":"<pre><code>Usage: monstermash decrypt [OPTIONS]\n\nOptions:\n  --profile TEXT\n  --private-key TEXT  Your private key.\n  --file TEXT         The path to the file you want to encrypt\n  --data TEXT         Input data you want to encrypt\n  --help              Show this message and exit.\n</code></pre> <pre><code>monstermash decrypt \\\n  --private-key 91c7b2534454587a3330537bce60056e9da9a9bf75d32507152f49e85514970d\n  --data 01765c67f451f3175f53bbe11d69d73a36d45074da935271473b4a1c460e3d797bee92fa7ff1216eb5324b247fd41cce283adbcc4df92baacfea27765360a7c0feb226cccc1538c0397783003d0283d2841d2a\n</code></pre>"},{"location":"contributing/","title":"Contributing","text":"<p>...</p>"},{"location":"docs/SUMMARY/","title":"SUMMARY","text":"<ul> <li>Monstermash<ul> <li>config</li> <li>crypt</li> <li>datamodels</li> <li>parser</li> <li>utils<ul> <li>file</li> </ul> </li> </ul> </li> </ul>"},{"location":"docs/monstermash/config/","title":"config","text":""},{"location":"docs/monstermash/config/#monstermash.config.Config","title":"<code>Config</code>","text":"<p>             Bases: <code>BaseSettings</code></p> <p>Config class provides a model for application configuration settings, which includes the path to the configuration file.</p> <p>Attributes:</p> Name Type Description <code>config_file</code> <code>str</code> <p>The path to the configuration file. Default is '~/.monstermashcfg'.</p>"},{"location":"docs/monstermash/config/#monstermash.config.Config.validate_file","title":"<code>validate_file(v)</code>","text":"<p>Validate and normalize the path of the configuration file.</p> <p>This validator check that if the config_file path starts with '~', it is expanded to the full path in the user's home directory. If not we store it where you have asked.</p> <p>Parameters:</p> Name Type Description Default <code>v</code> <code>str</code> <p>The original path string.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The normalized file path.</p>"},{"location":"docs/monstermash/crypt/","title":"crypt","text":""},{"location":"docs/monstermash/crypt/#monstermash.crypt.Crypt","title":"<code>Crypt</code>","text":"<p>Crypt class provides methods for encryption and decryption of messages using NaCl (Salt) cryptographic library.</p> <p>Attributes:</p> Name Type Description <code>key_length</code> <code>int</code> <p>The length of the keys used in encryption/decryption. Default is 32.</p>"},{"location":"docs/monstermash/crypt/#monstermash.crypt.Crypt.encoded_public_key","title":"<code>encoded_public_key: bytes</code>  <code>property</code>","text":"<p>Get encoded public key.</p> <p>Returns:</p> Name Type Description <code>bytes</code> <code>bytes</code> <p>The encoded public key.</p>"},{"location":"docs/monstermash/crypt/#monstermash.crypt.Crypt.private_key","title":"<code>private_key: bytes</code>  <code>property</code>","text":"<p>Get encoded private key.</p> <p>Returns:</p> Name Type Description <code>bytes</code> <code>bytes</code> <p>The encoded private key.</p>"},{"location":"docs/monstermash/crypt/#monstermash.crypt.Crypt.public_key","title":"<code>public_key: bytes</code>  <code>property</code>","text":"<p>Get raw public key.</p> <p>Returns:</p> Name Type Description <code>bytes</code> <code>bytes</code> <p>The raw public key.</p>"},{"location":"docs/monstermash/crypt/#monstermash.crypt.Crypt.__init__","title":"<code>__init__(private_key, message_encoder=HexEncoder, key_encoder=HexEncoder)</code>","text":"<p>Initialize a new instance of Crypt class.</p> <p>Parameters:</p> Name Type Description Default <code>private_key</code> <code>bytes</code> <p>The private key used for encryption and decryption.</p> required <code>message_encoder</code> <code>HexEncoder</code> <p>Encoder used for encoding and decoding messages. Default is HexEncoder.</p> <code>HexEncoder</code> <code>key_encoder</code> <code>HexEncoder</code> <p>Encoder used for encoding and decoding keys. Default is HexEncoder.</p> <code>HexEncoder</code>"},{"location":"docs/monstermash/crypt/#monstermash.crypt.Crypt.decrypt","title":"<code>decrypt(message)</code>","text":"<p>Decrypt a message using the private key.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>bytes</code> <p>The message to be decrypted.</p> required <p>Returns:</p> Name Type Description <code>bytes</code> <code>bytes</code> <p>The decrypted message.</p>"},{"location":"docs/monstermash/crypt/#monstermash.crypt.Crypt.encrypt","title":"<code>encrypt(message, public_key)</code>","text":"<p>Encrypt a message using a given public key. We append the public key to the ciphertext so that decryption becomes easy. The size of the key has to be consistent between encryption and decryption so that we can split the ciphertext based off the key size.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>bytes</code> <p>The message to be encrypted.</p> required <code>public_key</code> <code>bytes</code> <p>The public key used for encryption.</p> required <p>Returns:</p> Name Type Description <code>bytes</code> <code>bytes</code> <p>The encrypted message.</p>"},{"location":"docs/monstermash/crypt/#monstermash.crypt.Crypt.generate","title":"<code>generate(encoder=HexEncoder)</code>  <code>classmethod</code>","text":"<p>Generate a new private-public key pair.</p> <p>Parameters:</p> Name Type Description Default <code>encoder</code> <code>HexEncoder</code> <p>Encoder used for encoding the keys. Default is HexEncoder.</p> <code>HexEncoder</code> <p>Returns:</p> Name Type Description <code>KeyPair</code> <code>KeyPair</code> <p>A tuple containing the encoded private key and public key.</p>"},{"location":"docs/monstermash/datamodels/","title":"datamodels","text":""},{"location":"docs/monstermash/datamodels/#monstermash.datamodels.KeyPair","title":"<code>KeyPair</code>","text":"<p>             Bases: <code>BaseModel</code></p> <p>KeyPair class representing a pair of private and public keys.</p> <p>Attributes:</p> Name Type Description <code>private_key</code> <code>SecretStr</code> <p>The private key used in the encryption or decryption process.</p> <code>public_key</code> <code>str</code> <p>The public key used in the encryption or decryption process.</p>"},{"location":"docs/monstermash/parser/","title":"parser","text":""},{"location":"docs/monstermash/parser/#monstermash.parser.ConfigManager","title":"<code>ConfigManager</code>","text":"<p>ConfigManager</p> <p>ConfigManager class manages the reading and writing operations to a configuration file. This is useful for generating a set of keys (using <code>monstermash generate</code>) that will be used for future encryption and decryption operations</p>"},{"location":"docs/monstermash/parser/#monstermash.parser.ConfigManager.__init__","title":"<code>__init__(config_file)</code>","text":"<p>Initialize a new instance of ConfigManager class.</p> <p>Parameters:</p> Name Type Description Default <code>config_file</code> <code>str</code> <p>The path of the configuration file. Will default to ~/.monstermashcfg</p> required"},{"location":"docs/monstermash/parser/#monstermash.parser.ConfigManager.read","title":"<code>read()</code>","text":"<p>Read the configuration file and returns a ConfigParser object.</p> <p>Returns:</p> Name Type Description <code>ConfigParser</code> <code>ConfigParser</code> <p>The ConfigParser object with the contents of the configuration file.</p>"},{"location":"docs/monstermash/parser/#monstermash.parser.ConfigManager.write","title":"<code>write(config)</code>","text":"<p>Write a ConfigParser object to the configuration file.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>ConfigParser</code> <p>The ConfigParser object to be written to the file.</p> required"},{"location":"docs/monstermash/utils/file/","title":"file","text":""},{"location":"docs/monstermash/utils/file/#monstermash.utils.file.open_file","title":"<code>open_file(file)</code>","text":"<p>Open a file and return its contents. For JSON files, the contents are returned as a dictionary. For non-JSON files, the contents are returned as a string.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>str</code> <p>The path to the file to open.</p> required <p>Returns:</p> Type Description <code>Union[Json, str]</code> <p>Union[dict, str]: The contents of the file. If the file is a JSON file, a dictionary is returned. Otherwise, a string is returned.</p>"}]}